class BrowserHistory {
private:
stack <string> prev;
stack <string> next;
string curr;
public:
    BrowserHistory(string homepage) {
        curr=homepage;
    }
    
    void visit(string url) {
        prev.push(curr);
        curr=url;
        //empty forward
        while(next.empty()!=true)
        {
            next.pop();
        }
    }
    
    string back(int steps) {
        while(prev.empty()!=true&&steps!=0)
        {
            next.push(curr);
            curr=prev.top();
            prev.pop();
            steps--;
        }
        return curr;
    }
    
    string forward(int steps) {
        while(next.empty()!=true&&steps!=0)
        {
            prev.push(curr);
            curr=next.top();
            next.pop();
            steps--;
        }
        return curr;
    }
};

/**
 * Your BrowserHistory object will be instantiated and called as such:
 * BrowserHistory* obj = new BrowserHistory(homepage);
 * obj->visit(url);
 * string param_2 = obj->back(steps);
 * string param_3 = obj->forward(steps);
 */

----------------------------------------2----------------------------------------------------

class BrowserHistory {
private:
vector<string> link;
int index; 
public:
    BrowserHistory(string homepage) {
        link.push_back(homepage);
        index=0;
    }
    
    void visit(string url) {
        if(index==link.size()-1)
        {link.push_back(url);index++;}
        else
        {index++;link[index]=url;}
        int temp=index;
        while(link.size()-1>temp)
        {
            temp++;
            link[temp]="";
        }
    }
    
    string back(int steps) {
        for(int i=1;i<=steps&&index>0;i++)
        {
            index--;
        }
        return link[index];
    }
    
    string forward(int steps) {
        for(int i=1;i<=steps&&index<link.size()-1&&link[index+1]!="";i++)
        {
            index++;
        }
        return link[index];
    }
};

/**
 * Your BrowserHistory object will be instantiated and called as such:
 * BrowserHistory* obj = new BrowserHistory(homepage);
 * obj->visit(url);
 * string param_2 = obj->back(steps);
 * string param_3 = obj->forward(steps);
 */
